# general node configs
[general]
network = "devnet"

# logger configs
[logger]
# log levels can be any of error, warn, trace
level = "debug"
# 'stdout' or file name without ext
# result filename would be $output$network.port.log
output = "dusk"
    
# Gossip peer settings
[network]
# Maximum number of items that can be registered by a single DupeMap
# Up to ~0.3MB per DupeMap instance could be allocated if maxDupeMapItems=300000
maxDupeMapItems=300000
# Number of seconds before dupemap expires and gets reset. 
# Ideally should be less than 15s - average consensus time
maxDupeMapExpire=20

# Node service flag
# 1 = full node
serviceFlag = 1

# Kadcast peer settings
[kadcast]
enabled=true

# grpc client connection config
[kadcast.grpc]
network="tcp"
address="127.0.0.1:8585"
# Number of seconds to wait for client conn establishment
dialTimeout = 10

[database]
# Backend storage used to store chain
# Supported drivers heavy_v0.1.0
driver = "heavy_v0.1.0"
# backend storage path -- should be different from wallet db dir
dir = "chain"
 
[mempool]
# Max size of memory of the accepted txs to keep
maxSizeMB = 100
# Possible values: "hashmap", "diskpool"
poolType = "hashmap"
# number of txs slots to allocate on each reseting hashmap mempool
hashmapPreallocTxs = 100
# Max number of items to respond with on topics.Mempool request
# To disable topics.Mempool handling, set it to 0
maxInvItems = 10000
# Back pressure on transaction propagation
propagateTimeout = "100ms"
propagateBurst = 1

[mempool.updates]
disabled = false
numNodes = 3

# backend storage path applicable for diskpool type
diskpoolDir = "mempool.db"

[rpc.rusk]
# timeout for internal GRPC calls expressed in milliseconds
contractTimeout=20000
defaultTimeout=200
connectionTimeout = 10000

# State-related configuration
[state]
# Period of state persistance attempts (in blocks)
persistEvery = 100
blockGasLimit = 5_000_000_000

# GraphQL API service
[gql]
# enable graphql service
enabled=true
# network must be "tcp", "tcp4", "tcp6", "unix" or "unixpacket".
network="tcp"
address="127.0.0.1:9001"

# enable/disable both HTTPS and WSS
enableTLS = false
# server TLS certificate file
certFile = ""
# server TLS key file
keyFile = ""

# maximum requests per second 
# uniqueness of a request is based on: 
# Remote IP, Request method and path
maxRequestLimit = 20

[gql.notification]
# Number of pub/sub brokers to broadcast new blocks. 
# 0 brokersNum disables notifications system
brokersNum = 1
clientsPerBroker = 1000

[[profile]]
# An array of profiling tasks
# types: cpu, heap, memstats, block, goroutine, mutex
#
# Examples:
#
# Continuous CPU profiling (cpu_$timestamp.prof)
# Start CPU profiling each hour and fetch samples for 60 sec
# 
# [[profile]]
# name = "cpu"
# interval = 3600
# duration = 60
#
# Continuous Memory profiling (heap_$timestamp.prof)
# Records complete memory profile each 30 mins
# name = "heap", interval = 1800, duration = 1800
#
# Log Memory and GC stats into log each 10 sec
# name = "memstats", interval = 10, duration = 1

[performance]
# Number of workers to spawn on an accumulator component
accumulatorWorkers = 4

# Information for the node to send consensus transactions with
[consensus]
# Path to a file that stores Consensus Keys / BLS public and secret keys
# if file does not exist, it will be created at startup.
keysfile = "/path/consensus.keys"
# the timeout for consensus step timers
consensustimeout = 5
# useCompressedKeys determines if AggregatePks works with compressed or uncompressed pks.
useCompressedKeys = false

# Timeout cfg for rpcBus calls
[timeout]
  timeoutgetmempooltxsbysize = 4
  timeoutgetmempooltxs = 3

[api]
# enable consensus API service
enabled = false
# enable/disable both HTTPS and WSS
enabletls = false
address="127.0.0.1:9199"
#5 mins
expirationtime=300

# gRPC API service
[rpc]
# network must be "tcp", "tcp4", "tcp6", "unix" or "unixpacket".
network="unix"
# in case the network is unix, 
# address must be a path to a unix socket (e.g /tmp/file.sock)
# in case the network is tcp*,
# address must be in form of a IP address (e.g 127.0.0.1:9000)
address="/tmp/dusk-grpc.sock"
# duration of the session for the grpc services exposed by the node
sessionDurationMins = 5
# do not require session
requireSession = true

enableTLS=false
# server TLS certificate file
certFile=""
# server TLS key file
keyFile=""